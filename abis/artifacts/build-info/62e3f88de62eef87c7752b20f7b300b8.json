{
	"id": "62e3f88de62eef87c7752b20f7b300b8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"abis/ConverterRegistry.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2019-05-15\r\n*/\r\n\r\n// File: contracts/utility/interfaces/IOwned.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/*\r\n    Owned contract interface\r\n*/\r\ncontract IOwned {\r\n    // this function isn't abstract since the compiler emits automatically generated getter functions as external\r\n    function owner() public view returns (address) {}\r\n\r\n    function transferOwnership(address _newOwner) public;\r\n    function acceptOwnership() public;\r\n}\r\n\r\n// File: contracts/utility/Owned.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n/*\r\n    Provides support and utilities for contract ownership\r\n*/\r\ncontract Owned is IOwned {\r\n    address public owner;\r\n    address public newOwner;\r\n\r\n    event OwnerUpdate(address indexed _prevOwner, address indexed _newOwner);\r\n\r\n    /**\r\n        @dev constructor\r\n    */\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // allows execution by the owner only\r\n    modifier ownerOnly {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /**\r\n        @dev allows transferring the contract ownership\r\n        the new owner still needs to accept the transfer\r\n        can only be called by the contract owner\r\n\r\n        @param _newOwner    new contract owner\r\n    */\r\n    function transferOwnership(address _newOwner) public ownerOnly {\r\n        require(_newOwner != owner);\r\n        newOwner = _newOwner;\r\n    }\r\n\r\n    /**\r\n        @dev used by a new owner to accept an ownership transfer\r\n    */\r\n    function acceptOwnership() public {\r\n        require(msg.sender == newOwner);\r\n        emit OwnerUpdate(owner, newOwner);\r\n        owner = newOwner;\r\n        newOwner = address(0);\r\n    }\r\n}\r\n\r\n// File: contracts/utility/Utils.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n/*\r\n    Utilities & Common Modifiers\r\n*/\r\ncontract Utils {\r\n    /**\r\n        constructor\r\n    */\r\n    constructor() public {\r\n    }\r\n\r\n    // verifies that an amount is greater than zero\r\n    modifier greaterThanZero(uint256 _amount) {\r\n        require(_amount > 0);\r\n        _;\r\n    }\r\n\r\n    // validates an address - currently only checks that it isn't null\r\n    modifier validAddress(address _address) {\r\n        require(_address != address(0));\r\n        _;\r\n    }\r\n\r\n    // verifies that the address is different than this contract address\r\n    modifier notThis(address _address) {\r\n        require(_address != address(this));\r\n        _;\r\n    }\r\n\r\n}\r\n\r\n// File: contracts/BancorConverterRegistry.sol\r\n\r\npragma solidity ^0.4.24;\r\n\r\n\r\n\r\n/**\r\n    Bancor Converter Registry\r\n\r\n    The bancor converter registry keeps converter addresses by token addresses and vice versa.\r\n    The owner can update converter addresses so that a the token address always points to\r\n    the updated list of converters for each token.\r\n\r\n    The contract also allows to iterate through all the tokens in the network.\r\n\r\n    Note that converter addresses for each token are returned in ascending order (from oldest\r\n    to latest).\r\n*/\r\ncontract ConverterRegistry is Owned, Utils {\r\n    mapping (address => bool) private tokensRegistered;         // token address -> registered or not\r\n    mapping (address => address[]) private tokensToConverters;  // token address -> converter addresses\r\n    mapping (address => address) private convertersToTokens;    // converter address -> token address\r\n    address[] public tokens;                                    // list of all token addresses\r\n\r\n    // triggered when a converter is added to the registry\r\n    event ConverterAddition(address indexed _token, address _address);\r\n\r\n    // triggered when a converter is removed from the registry\r\n    event ConverterRemoval(address indexed _token, address _address);\r\n\r\n    /**\r\n        @dev constructor\r\n    */\r\n    constructor() public {\r\n    }\r\n\r\n    /**\r\n        @dev returns the number of tokens in the registry\r\n\r\n        @return number of tokens\r\n    */\r\n    function tokenCount() public view returns (uint256) {\r\n        return tokens.length;\r\n    }\r\n\r\n    /**\r\n        @dev returns the number of converters associated with the given token\r\n        or 0 if the token isn't registered\r\n\r\n        @param _token   token address\r\n\r\n        @return number of converters\r\n    */\r\n    function converterCount(address _token) public view returns (uint256) {\r\n        return tokensToConverters[_token].length;\r\n    }\r\n\r\n    /**\r\n        @dev returns the converter address associated with the given token\r\n        or zero address if no such converter exists\r\n\r\n        @param _token   token address\r\n        @param _index   converter index\r\n\r\n        @return converter address\r\n    */\r\n    function converterAddress(address _token, uint32 _index) public view returns (address) {\r\n        if (_index >= tokensToConverters[_token].length)\r\n            return address(0);\r\n\r\n        return tokensToConverters[_token][_index];\r\n    }\r\n\r\n    /**\r\n        @dev returns the token address associated with the given converter\r\n        or zero address if no such converter exists\r\n\r\n        @param _converter   converter address\r\n\r\n        @return token address\r\n    */\r\n    function tokenAddress(address _converter) public view returns (address) {\r\n        return convertersToTokens[_converter];\r\n    }\r\n\r\n    /**\r\n        @dev adds a new converter address for a given token to the registry\r\n        throws if the converter is already registered\r\n\r\n        @param _token       token address\r\n        @param _converter   converter address\r\n    */\r\n    function registerConverter(address _token, address _converter)\r\n        public\r\n        ownerOnly\r\n        validAddress(_token)\r\n        validAddress(_converter)\r\n    {\r\n        require(convertersToTokens[_converter] == address(0));\r\n\r\n        // add the token to the list of tokens\r\n        if (!tokensRegistered[_token]) {\r\n            tokens.push(_token);\r\n            tokensRegistered[_token] = true;\r\n        }\r\n\r\n        tokensToConverters[_token].push(_converter);\r\n        convertersToTokens[_converter] = _token;\r\n\r\n        // dispatch the converter addition event\r\n        emit ConverterAddition(_token, _converter);\r\n    }\r\n\r\n    /**\r\n        @dev removes an existing converter from the registry\r\n        note that the function doesn't scale and might be needed to be called\r\n        multiple times when removing an older converter from a large converter list\r\n\r\n        @param _token   token address\r\n        @param _index   converter index\r\n    */\r\n    function unregisterConverter(address _token, uint32 _index)\r\n        public\r\n        ownerOnly\r\n        validAddress(_token)\r\n    {\r\n        require(_index < tokensToConverters[_token].length);\r\n\r\n        address converter = tokensToConverters[_token][_index];\r\n\r\n        // move all newer converters 1 position lower\r\n        for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\r\n            tokensToConverters[_token][i - 1] = tokensToConverters[_token][i];\r\n        }\r\n\r\n        // decrease the number of converters defined for the token by 1\r\n        tokensToConverters[_token].length--;\r\n        \r\n        // removes the converter from the converters -> tokens list\r\n        delete convertersToTokens[converter];\r\n\r\n        // dispatch the converter removal event\r\n        emit ConverterRemoval(_token, converter);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"abis/ConverterRegistry.sol": {
				"ConverterRegistry": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_token",
									"type": "address"
								},
								{
									"name": "_index",
									"type": "uint32"
								}
							],
							"name": "unregisterConverter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokens",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_token",
									"type": "address"
								},
								{
									"name": "_index",
									"type": "uint32"
								}
							],
							"name": "converterAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_converter",
									"type": "address"
								}
							],
							"name": "tokenAddress",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "tokenCount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_token",
									"type": "address"
								}
							],
							"name": "converterCount",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_token",
									"type": "address"
								},
								{
									"name": "_converter",
									"type": "address"
								}
							],
							"name": "registerConverter",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_token",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_address",
									"type": "address"
								}
							],
							"name": "ConverterAddition",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_token",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_address",
									"type": "address"
								}
							],
							"name": "ConverterRemoval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_prevOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "OwnerUpdate",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"acceptOwnership()": {
								"details": "used by a new owner to accept an ownership transfer\r"
							},
							"converterAddress(address,uint32)": {
								"details": "returns the converter address associated with the given token\r or zero address if no such converter exists\r",
								"params": {
									"_index": "converter index\r",
									"_token": "token address\r"
								},
								"return": "converter address\r"
							},
							"converterCount(address)": {
								"details": "returns the number of converters associated with the given token\r or 0 if the token isn't registered\r",
								"params": {
									"_token": "token address\r"
								},
								"return": "number of converters\r"
							},
							"registerConverter(address,address)": {
								"details": "adds a new converter address for a given token to the registry\r throws if the converter is already registered\r",
								"params": {
									"_converter": "converter address\r",
									"_token": "token address\r"
								}
							},
							"tokenAddress(address)": {
								"details": "returns the token address associated with the given converter\r or zero address if no such converter exists\r",
								"params": {
									"_converter": "converter address\r"
								},
								"return": "token address\r"
							},
							"tokenCount()": {
								"details": "returns the number of tokens in the registry\r",
								"return": "number of tokens\r"
							},
							"transferOwnership(address)": {
								"details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r",
								"params": {
									"_newOwner": "new contract owner\r"
								}
							},
							"unregisterConverter(address,uint32)": {
								"details": "removes an existing converter from the registry\r note that the function doesn't scale and might be needed to be called\r multiple times when removing an older converter from a large converter list\r",
								"params": {
									"_index": "converter index\r",
									"_token": "token address\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"abis/ConverterRegistry.sol\":2973:7285  contract ConverterRegistry is Owned, Utils {\r... */\n  mstore(0x40, 0x80)\n    /* \"abis/ConverterRegistry.sol\":3746:3775  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"abis/ConverterRegistry.sol\":3746:3775  constructor() public {\r... */\n  pop\n    /* \"abis/ConverterRegistry.sol\":876:886  msg.sender */\n  caller\n    /* \"abis/ConverterRegistry.sol\":868:873  owner */\n  0x0\n  dup1\n    /* \"abis/ConverterRegistry.sol\":868:886  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"abis/ConverterRegistry.sol\":2973:7285  contract ConverterRegistry is Owned, Utils {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"abis/ConverterRegistry.sol\":2973:7285  contract ConverterRegistry is Owned, Utils {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x38cb066f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f64b2be\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x90ab3106\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9884e801\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9f181b5e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xcd9d4d66\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd26a8d2e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"abis/ConverterRegistry.sol\":6435:7282  function unregisterConverter(address _token, uint32 _index)\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"abis/ConverterRegistry.sol\":6435:7282  function unregisterConverter(address _token, uint32 _index)\r... */\n      pop\n      tag_14\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"abis/ConverterRegistry.sol\":3334:3357  address[] public tokens */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"abis/ConverterRegistry.sol\":3334:3357  address[] public tokens */\n      pop\n      tag_17\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"abis/ConverterRegistry.sol\":653:673  address public owner */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_22:\n        /* \"abis/ConverterRegistry.sol\":653:673  address public owner */\n      pop\n      tag_23\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":4617:4856  function converterAddress(address _token, uint32 _index) public view returns (address) {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"abis/ConverterRegistry.sol\":4617:4856  function converterAddress(address _token, uint32 _index) public view returns (address) {\r... */\n      pop\n      tag_26\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_27)\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":5092:5220  function tokenAddress(address _converter) public view returns (address) {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_28\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_28:\n        /* \"abis/ConverterRegistry.sol\":5092:5220  function tokenAddress(address _converter) public view returns (address) {\r... */\n      pop\n      tag_29\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":3895:3986  function tokenCount() public view returns (uint256) {\r... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"abis/ConverterRegistry.sol\":3895:3986  function tokenCount() public view returns (uint256) {\r... */\n      pop\n      tag_32\n      jump(tag_33)\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":4215:4344  function converterCount(address _token) public view returns (uint256) {\r... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"abis/ConverterRegistry.sol\":4215:4344  function converterCount(address _token) public view returns (uint256) {\r... */\n      pop\n      tag_35\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_36)\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":5469:6102  function registerConverter(address _token, address _converter)\r... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_37:\n        /* \"abis/ConverterRegistry.sol\":5469:6102  function registerConverter(address _token, address _converter)\r... */\n      pop\n      tag_38\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_39)\n    tag_38:\n      stop\n        /* \"abis/ConverterRegistry.sol\":680:703  address public newOwner */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"abis/ConverterRegistry.sol\":680:703  address public newOwner */\n      pop\n      tag_41\n      jump(tag_42)\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n      pop\n      tag_44\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_45)\n    tag_44:\n      stop\n        /* \"abis/ConverterRegistry.sol\":6435:7282  function unregisterConverter(address _token, uint32 _index)\r... */\n    tag_15:\n        /* \"abis/ConverterRegistry.sol\":6640:6657  address converter */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6767:6775  uint32 i */\n      dup1\n        /* \"abis/ConverterRegistry.sol\":997:1002  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:993  msg.sender */\n      caller\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":975:1003  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_47\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_47:\n        /* \"abis/ConverterRegistry.sol\":6552:6558  _token */\n      dup4\n        /* \"abis/ConverterRegistry.sol\":2200:2201  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":2180:2202  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":2180:2188  _address */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":2180:2202  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"abis/ConverterRegistry.sol\":2172:2203  require(_address != address(0)) */\n      iszero\n      iszero\n      tag_49\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_49:\n        /* \"abis/ConverterRegistry.sol\":6593:6611  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":6593:6619  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6612:6618  _token */\n      dup7\n        /* \"abis/ConverterRegistry.sol\":6593:6619  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":6593:6626  tokensToConverters[_token].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":6584:6590  _index */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":6584:6626  _index < tokensToConverters[_token].length */\n      0xffffffff\n      and\n      lt\n        /* \"abis/ConverterRegistry.sol\":6576:6627  require(_index < tokensToConverters[_token].length) */\n      iszero\n      iszero\n      tag_51\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_51:\n        /* \"abis/ConverterRegistry.sol\":6660:6678  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":6660:6686  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6679:6685  _token */\n      dup7\n        /* \"abis/ConverterRegistry.sol\":6660:6686  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":6687:6693  _index */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":6660:6694  tokensToConverters[_token][_index] */\n      0xffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":6640:6694  address converter = tokensToConverters[_token][_index] */\n      swap3\n      pop\n        /* \"abis/ConverterRegistry.sol\":6787:6788  1 */\n      0x1\n        /* \"abis/ConverterRegistry.sol\":6778:6784  _index */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":6778:6788  _index + 1 */\n      add\n        /* \"abis/ConverterRegistry.sol\":6767:6788  uint32 i = _index + 1 */\n      swap2\n      pop\n        /* \"abis/ConverterRegistry.sol\":6762:6926  for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\r... */\n    tag_54:\n        /* \"abis/ConverterRegistry.sol\":6794:6812  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":6794:6820  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6813:6819  _token */\n      dup7\n        /* \"abis/ConverterRegistry.sol\":6794:6820  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":6794:6827  tokensToConverters[_token].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":6790:6791  i */\n      dup3\n        /* \"abis/ConverterRegistry.sol\":6790:6827  i < tokensToConverters[_token].length */\n      0xffffffff\n      and\n      lt\n        /* \"abis/ConverterRegistry.sol\":6762:6926  for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\r... */\n      iszero\n      tag_55\n      jumpi\n        /* \"abis/ConverterRegistry.sol\":6885:6903  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":6885:6911  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6904:6910  _token */\n      dup7\n        /* \"abis/ConverterRegistry.sol\":6885:6911  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":6912:6913  i */\n      dup3\n        /* \"abis/ConverterRegistry.sol\":6885:6914  tokensToConverters[_token][i] */\n      0xffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":6849:6867  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":6849:6875  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6868:6874  _token */\n      dup8\n        /* \"abis/ConverterRegistry.sol\":6849:6875  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":6880:6881  1 */\n      0x1\n        /* \"abis/ConverterRegistry.sol\":6876:6877  i */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":6876:6881  i - 1 */\n      sub\n        /* \"abis/ConverterRegistry.sol\":6849:6882  tokensToConverters[_token][i - 1] */\n      0xffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_59\n      jumpi\n      invalid\n    tag_59:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n        /* \"abis/ConverterRegistry.sol\":6849:6914  tokensToConverters[_token][i - 1] = tokensToConverters[_token][i] */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":6829:6832  i++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"abis/ConverterRegistry.sol\":6762:6926  for (uint32 i = _index + 1; i < tokensToConverters[_token].length; i++) {\r... */\n      jump(tag_54)\n    tag_55:\n        /* \"abis/ConverterRegistry.sol\":7011:7029  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":7011:7037  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":7030:7036  _token */\n      dup7\n        /* \"abis/ConverterRegistry.sol\":7011:7037  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":7011:7046  tokensToConverters[_token].length-- */\n      dup1\n      sload\n      dup1\n      swap2\n      swap1\n      0x1\n      swap1\n      sub\n      tag_61\n      swap2\n      swap1\n      jump\t// in(tag_62)\n    tag_61:\n      pop\n        /* \"abis/ConverterRegistry.sol\":7143:7161  convertersToTokens */\n      0x4\n        /* \"abis/ConverterRegistry.sol\":7143:7172  convertersToTokens[converter] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":7162:7171  converter */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":7143:7172  convertersToTokens[converter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"abis/ConverterRegistry.sol\":7136:7172  delete convertersToTokens[converter] */\n      0x100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"abis/ConverterRegistry.sol\":7256:7262  _token */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":7239:7274  ConverterRemoval(_token, converter) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe294\n        /* \"abis/ConverterRegistry.sol\":7264:7273  converter */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":7239:7274  ConverterRemoval(_token, converter) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"abis/ConverterRegistry.sol\":1014:1015  _ */\n      pop\n        /* \"abis/ConverterRegistry.sol\":6435:7282  function unregisterConverter(address _token, uint32 _index)\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":3334:3357  address[] public tokens */\n    tag_18:\n      0x5\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n    tag_21:\n        /* \"abis/ConverterRegistry.sol\":1561:1569  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1547:1569  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1547:1557  msg.sender */\n      caller\n        /* \"abis/ConverterRegistry.sol\":1547:1569  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":1539:1570  require(msg.sender == newOwner) */\n      iszero\n      iszero\n      tag_66\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_66:\n        /* \"abis/ConverterRegistry.sol\":1605:1613  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1586:1614  OwnerUpdate(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1598:1603  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1586:1614  OwnerUpdate(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"abis/ConverterRegistry.sol\":1633:1641  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1625:1630  owner */\n      0x0\n      dup1\n        /* \"abis/ConverterRegistry.sol\":1625:1641  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":1671:1672  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":1652:1660  newOwner */\n      0x1\n      0x0\n        /* \"abis/ConverterRegistry.sol\":1652:1673  newOwner = address(0) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":653:673  address public owner */\n    tag_24:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":4617:4856  function converterAddress(address _token, uint32 _index) public view returns (address) {\r... */\n    tag_27:\n        /* \"abis/ConverterRegistry.sol\":4695:4702  address */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":4729:4747  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":4729:4755  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":4748:4754  _token */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":4729:4755  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":4729:4762  tokensToConverters[_token].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":4719:4725  _index */\n      dup3\n        /* \"abis/ConverterRegistry.sol\":4719:4762  _index >= tokensToConverters[_token].length */\n      0xffffffff\n      and\n      lt\n      iszero\n        /* \"abis/ConverterRegistry.sol\":4715:4794  if (_index >= tokensToConverters[_token].length)\r... */\n      iszero\n      tag_68\n      jumpi\n        /* \"abis/ConverterRegistry.sol\":4792:4793  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":4777:4794  return address(0) */\n      swap1\n      pop\n      jump(tag_67)\n        /* \"abis/ConverterRegistry.sol\":4715:4794  if (_index >= tokensToConverters[_token].length)\r... */\n    tag_68:\n        /* \"abis/ConverterRegistry.sol\":4814:4832  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":4814:4840  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":4833:4839  _token */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":4814:4840  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":4841:4847  _index */\n      dup3\n        /* \"abis/ConverterRegistry.sol\":4814:4848  tokensToConverters[_token][_index] */\n      0xffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_69\n      jumpi\n      invalid\n    tag_69:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":4807:4848  return tokensToConverters[_token][_index] */\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":4617:4856  function converterAddress(address _token, uint32 _index) public view returns (address) {\r... */\n    tag_67:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":5092:5220  function tokenAddress(address _converter) public view returns (address) {\r... */\n    tag_30:\n        /* \"abis/ConverterRegistry.sol\":5155:5162  address */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5182:5200  convertersToTokens */\n      0x4\n        /* \"abis/ConverterRegistry.sol\":5182:5212  convertersToTokens[_converter] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5201:5211  _converter */\n      dup4\n        /* \"abis/ConverterRegistry.sol\":5182:5212  convertersToTokens[_converter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":5175:5212  return convertersToTokens[_converter] */\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":5092:5220  function tokenAddress(address _converter) public view returns (address) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":3895:3986  function tokenCount() public view returns (uint256) {\r... */\n    tag_33:\n        /* \"abis/ConverterRegistry.sol\":3938:3945  uint256 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":3965:3971  tokens */\n      0x5\n        /* \"abis/ConverterRegistry.sol\":3965:3978  tokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":3958:3978  return tokens.length */\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":3895:3986  function tokenCount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":4215:4344  function converterCount(address _token) public view returns (uint256) {\r... */\n    tag_36:\n        /* \"abis/ConverterRegistry.sol\":4276:4283  uint256 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":4303:4321  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":4303:4329  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":4322:4328  _token */\n      dup4\n        /* \"abis/ConverterRegistry.sol\":4303:4329  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":4303:4336  tokensToConverters[_token].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":4296:4336  return tokensToConverters[_token].length */\n      swap1\n      pop\n        /* \"abis/ConverterRegistry.sol\":4215:4344  function converterCount(address _token) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":5469:6102  function registerConverter(address _token, address _converter)\r... */\n    tag_39:\n        /* \"abis/ConverterRegistry.sol\":997:1002  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:993  msg.sender */\n      caller\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":975:1003  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_75\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_75:\n        /* \"abis/ConverterRegistry.sol\":5589:5595  _token */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":2200:2201  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":2180:2202  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":2180:2188  _address */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":2180:2202  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"abis/ConverterRegistry.sol\":2172:2203  require(_address != address(0)) */\n      iszero\n      iszero\n      tag_77\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_77:\n        /* \"abis/ConverterRegistry.sol\":5619:5629  _converter */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":2200:2201  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":2180:2202  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":2180:2188  _address */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":2180:2202  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"abis/ConverterRegistry.sol\":2172:2203  require(_address != address(0)) */\n      iszero\n      iszero\n      tag_79\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_79:\n        /* \"abis/ConverterRegistry.sol\":5697:5698  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5655:5699  convertersToTokens[_converter] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":5655:5673  convertersToTokens */\n      0x4\n        /* \"abis/ConverterRegistry.sol\":5655:5685  convertersToTokens[_converter] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5674:5684  _converter */\n      dup6\n        /* \"abis/ConverterRegistry.sol\":5655:5685  convertersToTokens[_converter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":5655:5699  convertersToTokens[_converter] == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":5647:5700  require(convertersToTokens[_converter] == address(0)) */\n      iszero\n      iszero\n      tag_81\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_81:\n        /* \"abis/ConverterRegistry.sol\":5766:5782  tokensRegistered */\n      0x2\n        /* \"abis/ConverterRegistry.sol\":5766:5790  tokensRegistered[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5783:5789  _token */\n      dup6\n        /* \"abis/ConverterRegistry.sol\":5766:5790  tokensRegistered[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"abis/ConverterRegistry.sol\":5765:5790  !tokensRegistered[_token] */\n      iszero\n        /* \"abis/ConverterRegistry.sol\":5761:5884  if (!tokensRegistered[_token]) {\r... */\n      iszero\n      tag_82\n      jumpi\n        /* \"abis/ConverterRegistry.sol\":5807:5813  tokens */\n      0x5\n        /* \"abis/ConverterRegistry.sol\":5819:5825  _token */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":5807:5826  tokens.push(_token) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"abis/ConverterRegistry.sol\":5807:5826  tokens.push(_token) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"abis/ConverterRegistry.sol\":5868:5872  true */\n      0x1\n        /* \"abis/ConverterRegistry.sol\":5841:5857  tokensRegistered */\n      0x2\n        /* \"abis/ConverterRegistry.sol\":5841:5865  tokensRegistered[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5858:5864  _token */\n      dup7\n        /* \"abis/ConverterRegistry.sol\":5841:5865  tokensRegistered[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5841:5872  tokensRegistered[_token] = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":5761:5884  if (!tokensRegistered[_token]) {\r... */\n    tag_82:\n        /* \"abis/ConverterRegistry.sol\":5896:5914  tokensToConverters */\n      0x3\n        /* \"abis/ConverterRegistry.sol\":5896:5922  tokensToConverters[_token] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5915:5921  _token */\n      dup6\n        /* \"abis/ConverterRegistry.sol\":5896:5922  tokensToConverters[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"abis/ConverterRegistry.sol\":5928:5938  _converter */\n      dup4\n        /* \"abis/ConverterRegistry.sol\":5896:5939  tokensToConverters[_token].push(_converter) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"abis/ConverterRegistry.sol\":5896:5939  tokensToConverters[_token].push(_converter) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"abis/ConverterRegistry.sol\":5983:5989  _token */\n      dup4\n        /* \"abis/ConverterRegistry.sol\":5950:5968  convertersToTokens */\n      0x4\n        /* \"abis/ConverterRegistry.sol\":5950:5980  convertersToTokens[_converter] */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5969:5979  _converter */\n      dup6\n        /* \"abis/ConverterRegistry.sol\":5950:5980  convertersToTokens[_converter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"abis/ConverterRegistry.sol\":5950:5989  convertersToTokens[_converter] = _token */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":6075:6081  _token */\n      dup4\n        /* \"abis/ConverterRegistry.sol\":6057:6094  ConverterAddition(_token, _converter) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f00\n        /* \"abis/ConverterRegistry.sol\":6083:6093  _converter */\n      dup5\n        /* \"abis/ConverterRegistry.sol\":6057:6094  ConverterAddition(_token, _converter) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"abis/ConverterRegistry.sol\":2214:2215  _ */\n      pop\n        /* \"abis/ConverterRegistry.sol\":1014:1015  _ */\n      pop\n        /* \"abis/ConverterRegistry.sol\":5469:6102  function registerConverter(address _token, address _converter)\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":680:703  address public newOwner */\n    tag_42:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n    tag_45:\n        /* \"abis/ConverterRegistry.sol\":997:1002  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:993  msg.sender */\n      caller\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":975:1003  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_86\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_86:\n        /* \"abis/ConverterRegistry.sol\":1358:1363  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1345:1363  _newOwner != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1345:1354  _newOwner */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":1345:1363  _newOwner != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"abis/ConverterRegistry.sol\":1337:1364  require(_newOwner != owner) */\n      iszero\n      iszero\n      tag_88\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_88:\n        /* \"abis/ConverterRegistry.sol\":1386:1395  _newOwner */\n      dup1\n        /* \"abis/ConverterRegistry.sol\":1375:1383  newOwner */\n      0x1\n      0x0\n        /* \"abis/ConverterRegistry.sol\":1375:1395  newOwner = _newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n      pop\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":2973:7285  contract ConverterRegistry is Owned, Utils {\r... */\n    tag_62:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      dup2\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_90\n      swap2\n      swap1\n      jump\t// in(tag_91)\n    tag_90:\n    tag_89:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_91:\n      tag_92\n      swap2\n      swap1\n    tag_93:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_94\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_93)\n    tag_94:\n      pop\n      swap1\n      jump\n    tag_92:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058203681112eaf3ccab732062e3f62e45e84a405b2bbb3ecbdd6e4039b1ceb82d3fa0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611201806100606000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338cb066f146100b45780634f64b2be1461010757806379ba5097146101745780638da5cb5b1461018b57806390ab3106146101e25780639884e801146102755780639f181b5e146102f8578063cd9d4d6614610323578063d26a8d2e1461037a578063d4ee1d90146103dd578063f2fde38b14610434575b600080fd5b3480156100c057600080fd5b50610105600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050610477565b005b34801561011357600080fd5b506101326004803603810190808035906020019092919050505061089b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018057600080fd5b506101896108d9565b005b34801561019757600080fd5b506101a0610a78565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ee57600080fd5b50610233600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050610a9d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028157600080fd5b506102b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030457600080fd5b5061030d610be8565b6040518082815260200191505060405180910390f35b34801561032f57600080fd5b50610364600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf5565b6040518082815260200191505060405180910390f35b34801561038657600080fd5b506103db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c41565b005b3480156103e957600080fd5b506103f2611063565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044057600080fd5b50610475600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611089565b005b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104d557600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561051257600080fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508463ffffffff1610151561056857600080fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208463ffffffff168154811015156105ba57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506001840191505b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508263ffffffff16101561076557600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff1681548110151561069057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001840363ffffffff1681548110151561071057fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081806001019250506105ee565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036107b79190611184565b50600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558473ffffffffffffffffffffffffffffffffffffffff167fc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe29484604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25050505050565b6005818154811015156108aa57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508263ffffffff16101515610af95760009050610b79565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff16815481101515610b4b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b92915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600580549050905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c9c57600080fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610cd957600080fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d1657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610db057600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610ec25760058490806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f0084604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a250505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110e457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561114057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156111ab578183600052602060002091820191016111aa91906111b0565b5b505050565b6111d291905b808211156111ce5760008160009055506001016111b6565b5090565b905600a165627a7a723058203681112eaf3ccab732062e3f62e45e84a405b2bbb3ecbdd6e4039b1ceb82d3fa0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1201 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x38CB066F EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x90AB3106 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x9884E801 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xCD9D4D66 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD26A8D2E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x434 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x477 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x8D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1089 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x5BA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x1 DUP5 ADD SWAP2 POP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x765 JUMPI PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x690 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x710 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8AA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xB4B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x5 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x11AB JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x11AA SWAP2 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11D2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x11B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATASIZE DUP2 GT 0x2e 0xaf EXTCODECOPY 0xca 0xb7 ORIGIN MOD 0x2e 0x3f PUSH3 0xE45E84 LOG4 SDIV 0xb2 0xbb 0xb3 0xec 0xbd 0xd6 0xe4 SUB SWAP12 SHR 0xeb DUP3 0xd3 STATICCALL STOP 0x29 ",
							"sourceMap": "2973:4312:0:-;;;3746:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;3746:29:0;876:10;868:5;;:18;;;;;;;;;;;;;;;;;;2973:4312;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338cb066f146100b45780634f64b2be1461010757806379ba5097146101745780638da5cb5b1461018b57806390ab3106146101e25780639884e801146102755780639f181b5e146102f8578063cd9d4d6614610323578063d26a8d2e1461037a578063d4ee1d90146103dd578063f2fde38b14610434575b600080fd5b3480156100c057600080fd5b50610105600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050610477565b005b34801561011357600080fd5b506101326004803603810190808035906020019092919050505061089b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018057600080fd5b506101896108d9565b005b34801561019757600080fd5b506101a0610a78565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101ee57600080fd5b50610233600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803563ffffffff169060200190929190505050610a9d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028157600080fd5b506102b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b7f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561030457600080fd5b5061030d610be8565b6040518082815260200191505060405180910390f35b34801561032f57600080fd5b50610364600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bf5565b6040518082815260200191505060405180910390f35b34801561038657600080fd5b506103db600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c41565b005b3480156103e957600080fd5b506103f2611063565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044057600080fd5b50610475600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611089565b005b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104d557600080fd5b83600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561051257600080fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508463ffffffff1610151561056857600080fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208463ffffffff168154811015156105ba57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506001840191505b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508263ffffffff16101561076557600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff1681548110151561069057fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001840363ffffffff1681548110151561071057fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081806001019250506105ee565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036107b79190611184565b50600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558473ffffffffffffffffffffffffffffffffffffffff167fc3b25a6c3b7509edde0f2e6cc317b5820a901fa82ac554709206e1d7237fe29484604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a25050505050565b6005818154811015156108aa57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561093557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508263ffffffff16101515610af95760009050610b79565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff16815481101515610b4b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b92915050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600580549050905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c9c57600080fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610cd957600080fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610d1657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610db057600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610ec25760058490806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506001600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f229aec2ec4b21e700d6daf13a894e7b38c18b844b021f2eee263f04af3ea6f0084604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a250505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110e457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561114057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b8154818355818111156111ab578183600052602060002091820191016111aa91906111b0565b5b505050565b6111d291905b808211156111ce5760008160009055506001016111b6565b5090565b905600a165627a7a723058203681112eaf3ccab732062e3f62e45e84a405b2bbb3ecbdd6e4039b1ceb82d3fa0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAF JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x38CB066F EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x4F64B2BE EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x90AB3106 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x9884E801 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0xCD9D4D66 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xD26A8D2E EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x434 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x477 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x8D9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A0 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30D PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC41 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F2 PUSH2 0x1063 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1089 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x5BA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH1 0x1 DUP5 ADD SWAP2 POP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x765 JUMPI PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x690 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP5 SUB PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x710 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x5EE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x1184 JUMP JUMPDEST POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8AA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND LT ISZERO ISZERO PUSH2 0xAF9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0xB4B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xC9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xCD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0xDB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xEC2 JUMPI PUSH1 0x5 DUP5 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x1140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x11AB JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x11AA SWAP2 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x11D2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x11CE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x11B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 CALLDATASIZE DUP2 GT 0x2e 0xaf EXTCODECOPY 0xca 0xb7 ORIGIN MOD 0x2e 0x3f PUSH3 0xE45E84 LOG4 SDIV 0xb2 0xbb 0xb3 0xec 0xbd 0xd6 0xe4 SUB SWAP12 SHR 0xeb DUP3 0xd3 STATICCALL STOP 0x29 ",
							"sourceMap": "2973:4312:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6435:847;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6435:847:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3334:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3334:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:187:0;;;;;;653:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;653:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;4617:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4617:239:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5092:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5092:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3895:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3895:91:0;;;;;;;;;;;;;;;;;;;;;;;4215:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4215:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:633;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:633:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;680:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1263:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;6435:847;6640:17;6767:8;997:5;;;;;;;;;;;983:19;;:10;:19;;;975:28;;;;;;;;6552:6;2200:1;2180:22;;:8;:22;;;;2172:31;;;;;;;;6593:18;:26;6612:6;6593:26;;;;;;;;;;;;;;;:33;;;;6584:6;:42;;;6576:51;;;;;;;;6660:18;:26;6679:6;6660:26;;;;;;;;;;;;;;;6687:6;6660:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6640:54;;6787:1;6778:6;:10;6767:21;;6762:164;6794:18;:26;6813:6;6794:26;;;;;;;;;;;;;;;:33;;;;6790:1;:37;;;6762:164;;;6885:18;:26;6904:6;6885:26;;;;;;;;;;;;;;;6912:1;6885:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6849:18;:26;6868:6;6849:26;;;;;;;;;;;;;;;6880:1;6876;:5;6849:33;;;;;;;;;;;;;;;;;;;;:65;;;;;;;;;;;;;;;;;;6829:3;;;;;;;6762:164;;;7011:18;:26;7030:6;7011:26;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:::i;:::-;;7143:18;:29;7162:9;7143:29;;;;;;;;;;;;;;;;7136:36;;;;;;;;;;;7256:6;7239:35;;;7264:9;7239:35;;;;;;;;;;;;;;;;;;;;;;1014:1;6435:847;;;;:::o;3334:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1494:187::-;1561:8;;;;;;;;;;;1547:22;;:10;:22;;;1539:31;;;;;;;;1605:8;;;;;;;;;;;1586:28;;1598:5;;;;;;;;;;;1586:28;;;;;;;;;;;;1633:8;;;;;;;;;;;1625:5;;:16;;;;;;;;;;;;;;;;;;1671:1;1652:8;;:21;;;;;;;;;;;;;;;;;;1494:187::o;653:20::-;;;;;;;;;;;;;:::o;4617:239::-;4695:7;4729:18;:26;4748:6;4729:26;;;;;;;;;;;;;;;:33;;;;4719:6;:43;;;;4715:79;;;4792:1;4777:17;;;;4715:79;4814:18;:26;4833:6;4814:26;;;;;;;;;;;;;;;4841:6;4814:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4807:41;;4617:239;;;;;:::o;5092:128::-;5155:7;5182:18;:30;5201:10;5182:30;;;;;;;;;;;;;;;;;;;;;;;;;5175:37;;5092:128;;;:::o;3895:91::-;3938:7;3965:6;:13;;;;3958:20;;3895:91;:::o;4215:129::-;4276:7;4303:18;:26;4322:6;4303:26;;;;;;;;;;;;;;;:33;;;;4296:40;;4215:129;;;:::o;5469:633::-;997:5;;;;;;;;;;;983:19;;:10;:19;;;975:28;;;;;;;;5589:6;2200:1;2180:22;;:8;:22;;;;2172:31;;;;;;;;5619:10;2200:1;2180:22;;:8;:22;;;;2172:31;;;;;;;;5697:1;5655:44;;:18;:30;5674:10;5655:30;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;5647:53;;;;;;;;5766:16;:24;5783:6;5766:24;;;;;;;;;;;;;;;;;;;;;;;;;5765:25;5761:123;;;5807:6;5819;5807:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5807:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5868:4;5841:16;:24;5858:6;5841:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;5761:123;5896:18;:26;5915:6;5896:26;;;;;;;;;;;;;;;5928:10;5896:43;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5896:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5983:6;5950:18;:30;5969:10;5950:30;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;6075:6;6057:37;;;6083:10;6057:37;;;;;;;;;;;;;;;;;;;;;;2214:1;1014;5469:633;;:::o;680:23::-;;;;;;;;;;;;;:::o;1263:140::-;997:5;;;;;;;;;;;983:19;;:10;:19;;;975:28;;;;;;;;1358:5;;;;;;;;;;;1345:18;;:9;:18;;;;1337:27;;;;;;;;1386:9;1375:8;;:20;;;;;;;;;;;;;;;;;;1263:140;:::o;2973:4312::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "921800",
								"executionCost": "21228",
								"totalCost": "943028"
							},
							"external": {
								"acceptOwnership()": "43240",
								"converterAddress(address,uint32)": "1356",
								"converterCount(address)": "721",
								"newOwner()": "640",
								"owner()": "508",
								"registerConverter(address,address)": "124939",
								"tokenAddress(address)": "717",
								"tokenCount()": "542",
								"tokens(uint256)": "808",
								"transferOwnership(address)": "21240",
								"unregisterConverter(address,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2973,
									"end": 7285,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "MSTORE"
								},
								{
									"begin": 3746,
									"end": 3775,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 3746,
									"end": 3775,
									"name": "POP"
								},
								{
									"begin": 876,
									"end": 886,
									"name": "CALLER"
								},
								{
									"begin": 868,
									"end": 873,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 868,
									"end": 873,
									"name": "DUP1"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "EXP"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SLOAD"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "MUL"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "NOT"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "AND"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SWAP1"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP4"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "AND"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "MUL"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "OR"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SWAP1"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SSTORE"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "POP"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "DUP1"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "CODECOPY"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 2973,
									"end": 7285,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058203681112eaf3ccab732062e3f62e45e84a405b2bbb3ecbdd6e4039b1ceb82d3fa0029",
									".code": [
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "MSTORE"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "LT"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DIV"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "AND"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "38CB066F"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "4F64B2BE"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "90AB3106"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "9884E801"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "9F181B5E"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "CD9D4D66"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "D26A8D2E"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "D4EE1D90"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "EQ"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "REVERT"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "JUMPDEST"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "DUP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SUB"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "DUP2"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "ADD"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "DUP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "DUP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "AND"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "ADD"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP3"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP2"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "DUP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "AND"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "ADD"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP3"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP2"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "SWAP1"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "JUMP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "JUMPDEST"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "STOP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMPDEST"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SUB"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP3"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMPDEST"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "MLOAD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP3"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "AND"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "AND"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "MSTORE"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "MLOAD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SUB"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "RETURN"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "STOP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP3"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "MSTORE"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "ADD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SUB"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "RETURN"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SUB"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "ADD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "AND"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "ADD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP3"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "AND"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "ADD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP3"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "JUMP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "MLOAD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP3"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "AND"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "AND"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "MSTORE"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "ADD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "MLOAD"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "DUP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SUB"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP1"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "RETURN"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "JUMPDEST"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SUB"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP2"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "ADD"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "AND"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "ADD"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP3"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP2"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "JUMP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "JUMPDEST"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "MLOAD"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP3"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "AND"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "AND"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP2"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "MSTORE"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "ADD"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP2"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "MLOAD"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "DUP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP2"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SUB"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "RETURN"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "JUMPDEST"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "JUMP"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "JUMPDEST"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "MLOAD"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "DUP3"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "DUP2"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "MSTORE"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "ADD"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "POP"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "MLOAD"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "DUP1"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "SWAP2"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "SUB"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "RETURN"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SUB"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "AND"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP3"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "JUMP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP3"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP2"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "MSTORE"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "ADD"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "MLOAD"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "DUP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SUB"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "RETURN"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "JUMPDEST"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "DUP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SUB"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "DUP2"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "ADD"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "DUP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "DUP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "AND"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "ADD"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP3"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP2"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "DUP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "AND"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "ADD"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP3"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP2"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "SWAP1"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "JUMP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "JUMPDEST"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "STOP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP3"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MSTORE"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "ADD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SUB"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "RETURN"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SUB"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP2"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "ADD"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "ADD"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP3"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP2"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "STOP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "JUMPDEST"
										},
										{
											"begin": 6640,
											"end": 6657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6767,
											"end": 6775,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "EXP"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DIV"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 993,
											"name": "CALLER"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "EQ"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPI"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "REVERT"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 6552,
											"end": 6558,
											"name": "DUP4"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2188,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "EQ"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "JUMPI"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "DUP1"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "REVERT"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "JUMPDEST"
										},
										{
											"begin": 6593,
											"end": 6611,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP7"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "AND"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "AND"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "DUP2"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "MSTORE"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "ADD"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "SWAP1"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "DUP2"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "MSTORE"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "ADD"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6619,
											"name": "KECCAK256"
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "DUP1"
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "SLOAD"
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "SWAP1"
										},
										{
											"begin": 6593,
											"end": 6626,
											"name": "POP"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP5"
										},
										{
											"begin": 6584,
											"end": 6626,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6584,
											"end": 6626,
											"name": "AND"
										},
										{
											"begin": 6584,
											"end": 6626,
											"name": "LT"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "ISZERO"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "ISZERO"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "JUMPI"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "DUP1"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "REVERT"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 6576,
											"end": 6627,
											"name": "JUMPDEST"
										},
										{
											"begin": 6660,
											"end": 6678,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP7"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "AND"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "AND"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "DUP2"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "MSTORE"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "ADD"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "DUP2"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "MSTORE"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "ADD"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6686,
											"name": "KECCAK256"
										},
										{
											"begin": 6687,
											"end": 6693,
											"name": "DUP5"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "AND"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "DUP2"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "SLOAD"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "DUP2"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "LT"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "ISZERO"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "ISZERO"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "JUMPI"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "INVALID"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "JUMPDEST"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "MSTORE"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "KECCAK256"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "ADD"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "SLOAD"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "EXP"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "SWAP1"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "DIV"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6660,
											"end": 6694,
											"name": "AND"
										},
										{
											"begin": 6640,
											"end": 6694,
											"name": "SWAP3"
										},
										{
											"begin": 6640,
											"end": 6694,
											"name": "POP"
										},
										{
											"begin": 6787,
											"end": 6788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6778,
											"end": 6784,
											"name": "DUP5"
										},
										{
											"begin": 6778,
											"end": 6788,
											"name": "ADD"
										},
										{
											"begin": 6767,
											"end": 6788,
											"name": "SWAP2"
										},
										{
											"begin": 6767,
											"end": 6788,
											"name": "POP"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "JUMPDEST"
										},
										{
											"begin": 6794,
											"end": 6812,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6819,
											"name": "DUP7"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "AND"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "AND"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "DUP2"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "MSTORE"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "ADD"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "SWAP1"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "DUP2"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "MSTORE"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "ADD"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6820,
											"name": "KECCAK256"
										},
										{
											"begin": 6794,
											"end": 6827,
											"name": "DUP1"
										},
										{
											"begin": 6794,
											"end": 6827,
											"name": "SLOAD"
										},
										{
											"begin": 6794,
											"end": 6827,
											"name": "SWAP1"
										},
										{
											"begin": 6794,
											"end": 6827,
											"name": "POP"
										},
										{
											"begin": 6790,
											"end": 6791,
											"name": "DUP3"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "AND"
										},
										{
											"begin": 6790,
											"end": 6827,
											"name": "LT"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "ISZERO"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "JUMPI"
										},
										{
											"begin": 6885,
											"end": 6903,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6910,
											"name": "DUP7"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "AND"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "AND"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "DUP2"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "MSTORE"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "ADD"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "DUP2"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "MSTORE"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "ADD"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6911,
											"name": "KECCAK256"
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "DUP3"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "AND"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "DUP2"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "SLOAD"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "DUP2"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "LT"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "ISZERO"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "ISZERO"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "JUMPI"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "INVALID"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "JUMPDEST"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "MSTORE"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "KECCAK256"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "ADD"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "SLOAD"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "EXP"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "DIV"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6885,
											"end": 6914,
											"name": "AND"
										},
										{
											"begin": 6849,
											"end": 6867,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "DUP8"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "AND"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "AND"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "MSTORE"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "ADD"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "SWAP1"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "MSTORE"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "ADD"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6875,
											"name": "KECCAK256"
										},
										{
											"begin": 6880,
											"end": 6881,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "DUP5"
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "SUB"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "AND"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "SLOAD"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "LT"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "ISZERO"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "ISZERO"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "JUMPI"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "INVALID"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "JUMPDEST"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "SWAP1"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "MSTORE"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "KECCAK256"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "ADD"
										},
										{
											"begin": 6849,
											"end": 6882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "EXP"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "SLOAD"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "DUP2"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "MUL"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "NOT"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "AND"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "DUP4"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "AND"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "MUL"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "OR"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "SWAP1"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "SSTORE"
										},
										{
											"begin": 6849,
											"end": 6914,
											"name": "POP"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "DUP2"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "DUP1"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "ADD"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "SWAP3"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "POP"
										},
										{
											"begin": 6829,
											"end": 6832,
											"name": "POP"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "JUMP"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 6762,
											"end": 6926,
											"name": "JUMPDEST"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7030,
											"end": 7036,
											"name": "DUP7"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "AND"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "AND"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "DUP2"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "MSTORE"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "ADD"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "SWAP1"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "DUP2"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "MSTORE"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "ADD"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7037,
											"name": "KECCAK256"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "DUP1"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SLOAD"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "DUP1"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SWAP2"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SWAP1"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SWAP1"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SUB"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SWAP2"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "SWAP1"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "JUMPDEST"
										},
										{
											"begin": 7011,
											"end": 7046,
											"name": "POP"
										},
										{
											"begin": 7143,
											"end": 7161,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7162,
											"end": 7171,
											"name": "DUP5"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "AND"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "AND"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "DUP2"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "MSTORE"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "ADD"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "SWAP1"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "DUP2"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "MSTORE"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "ADD"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "KECCAK256"
										},
										{
											"begin": 7143,
											"end": 7172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "EXP"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "DUP2"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "SLOAD"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "SWAP1"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "MUL"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "NOT"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "AND"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "SWAP1"
										},
										{
											"begin": 7136,
											"end": 7172,
											"name": "SSTORE"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP5"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "AND"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "C3B25A6C3B7509EDDE0F2E6CC317B5820A901FA82AC554709206E1D7237FE294"
										},
										{
											"begin": 7264,
											"end": 7273,
											"name": "DUP5"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "MLOAD"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "DUP1"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "DUP3"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "AND"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "AND"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "DUP2"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "MSTORE"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "ADD"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "SWAP2"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "POP"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "POP"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "MLOAD"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "DUP1"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "SWAP2"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "SUB"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "SWAP1"
										},
										{
											"begin": 7239,
											"end": 7274,
											"name": "LOG2"
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "POP"
										},
										{
											"begin": 6435,
											"end": 7282,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMPDEST"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SLOAD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "LT"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "ISZERO"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "ISZERO"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMPI"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "INVALID"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMPDEST"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "MSTORE"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "KECCAK256"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "ADD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "POP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SLOAD"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "EXP"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "SWAP1"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DIV"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "AND"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "DUP2"
										},
										{
											"begin": 3334,
											"end": 3357,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SLOAD"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "EXP"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "DIV"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "CALLER"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "EQ"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPI"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "REVERT"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "AND"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SLOAD"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "EXP"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "DIV"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "SWAP2"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "SUB"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "LOG3"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "EXP"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "DIV"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "DUP1"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "EXP"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "DUP2"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "DUP2"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "MUL"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "NOT"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "DUP4"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "MUL"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "OR"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SSTORE"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "POP"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "EXP"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SLOAD"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MUL"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "NOT"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP4"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MUL"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "OR"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SSTORE"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SLOAD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "EXP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DIV"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4695,
											"end": 4702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4747,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4754,
											"name": "DUP5"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "AND"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "AND"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "DUP2"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "MSTORE"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "ADD"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "SWAP1"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "DUP2"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "MSTORE"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "ADD"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4755,
											"name": "KECCAK256"
										},
										{
											"begin": 4729,
											"end": 4762,
											"name": "DUP1"
										},
										{
											"begin": 4729,
											"end": 4762,
											"name": "SLOAD"
										},
										{
											"begin": 4729,
											"end": 4762,
											"name": "SWAP1"
										},
										{
											"begin": 4729,
											"end": 4762,
											"name": "POP"
										},
										{
											"begin": 4719,
											"end": 4725,
											"name": "DUP3"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "AND"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "LT"
										},
										{
											"begin": 4719,
											"end": 4762,
											"name": "ISZERO"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "ISZERO"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "JUMPI"
										},
										{
											"begin": 4792,
											"end": 4793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4794,
											"name": "SWAP1"
										},
										{
											"begin": 4777,
											"end": 4794,
											"name": "POP"
										},
										{
											"begin": 4777,
											"end": 4794,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4777,
											"end": 4794,
											"name": "JUMP"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 4715,
											"end": 4794,
											"name": "JUMPDEST"
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4839,
											"name": "DUP5"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "AND"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "AND"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "DUP2"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "MSTORE"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "ADD"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "SWAP1"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "DUP2"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "MSTORE"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "ADD"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4840,
											"name": "KECCAK256"
										},
										{
											"begin": 4841,
											"end": 4847,
											"name": "DUP3"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "AND"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "DUP2"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "SLOAD"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "DUP2"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "LT"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "ISZERO"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "ISZERO"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "JUMPI"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "INVALID"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "JUMPDEST"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "MSTORE"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "KECCAK256"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "ADD"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "SLOAD"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "EXP"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "DIV"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4814,
											"end": 4848,
											"name": "AND"
										},
										{
											"begin": 4807,
											"end": 4848,
											"name": "SWAP1"
										},
										{
											"begin": 4807,
											"end": 4848,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP3"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "SWAP2"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "POP"
										},
										{
											"begin": 4617,
											"end": 4856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "JUMPDEST"
										},
										{
											"begin": 5155,
											"end": 5162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5211,
											"name": "DUP4"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "AND"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "AND"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "DUP2"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "MSTORE"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "ADD"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "SWAP1"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "DUP2"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "MSTORE"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "ADD"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "KECCAK256"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "SWAP1"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "SLOAD"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "SWAP1"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "EXP"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "SWAP1"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "DIV"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5182,
											"end": 5212,
											"name": "AND"
										},
										{
											"begin": 5175,
											"end": 5212,
											"name": "SWAP1"
										},
										{
											"begin": 5175,
											"end": 5212,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP2"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "SWAP1"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "POP"
										},
										{
											"begin": 5092,
											"end": 5220,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "JUMPDEST"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3965,
											"end": 3978,
											"name": "DUP1"
										},
										{
											"begin": 3965,
											"end": 3978,
											"name": "SLOAD"
										},
										{
											"begin": 3965,
											"end": 3978,
											"name": "SWAP1"
										},
										{
											"begin": 3965,
											"end": 3978,
											"name": "POP"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "SWAP1"
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "POP"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "SWAP1"
										},
										{
											"begin": 3895,
											"end": 3986,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "JUMPDEST"
										},
										{
											"begin": 4276,
											"end": 4283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4328,
											"name": "DUP4"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "AND"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "AND"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "DUP2"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "MSTORE"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "ADD"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "SWAP1"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "DUP2"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "MSTORE"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "ADD"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4329,
											"name": "KECCAK256"
										},
										{
											"begin": 4303,
											"end": 4336,
											"name": "DUP1"
										},
										{
											"begin": 4303,
											"end": 4336,
											"name": "SLOAD"
										},
										{
											"begin": 4303,
											"end": 4336,
											"name": "SWAP1"
										},
										{
											"begin": 4303,
											"end": 4336,
											"name": "POP"
										},
										{
											"begin": 4296,
											"end": 4336,
											"name": "SWAP1"
										},
										{
											"begin": 4296,
											"end": 4336,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP2"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "SWAP1"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "POP"
										},
										{
											"begin": 4215,
											"end": 4344,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "EXP"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DIV"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 993,
											"name": "CALLER"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "EQ"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPI"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "REVERT"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 5589,
											"end": 5595,
											"name": "DUP2"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2188,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "EQ"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "JUMPI"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "DUP1"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "REVERT"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "JUMPDEST"
										},
										{
											"begin": 5619,
											"end": 5629,
											"name": "DUP2"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2188,
											"name": "DUP2"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "AND"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "EQ"
										},
										{
											"begin": 2180,
											"end": 2202,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "ISZERO"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "JUMPI"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "DUP1"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "REVERT"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2172,
											"end": 2203,
											"name": "JUMPDEST"
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5699,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "DUP6"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "DUP2"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "MSTORE"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "ADD"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "DUP2"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "MSTORE"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "ADD"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "KECCAK256"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "SLOAD"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "EXP"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "SWAP1"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "DIV"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5685,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5655,
											"end": 5699,
											"name": "AND"
										},
										{
											"begin": 5655,
											"end": 5699,
											"name": "EQ"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "ISZERO"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "ISZERO"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "JUMPI"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "DUP1"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "REVERT"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5647,
											"end": 5700,
											"name": "JUMPDEST"
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5789,
											"name": "DUP6"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "AND"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "AND"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "MSTORE"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "DUP2"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "MSTORE"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "ADD"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "KECCAK256"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "SLOAD"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "EXP"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "SWAP1"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "DIV"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5766,
											"end": 5790,
											"name": "AND"
										},
										{
											"begin": 5765,
											"end": 5790,
											"name": "ISZERO"
										},
										{
											"begin": 5761,
											"end": 5884,
											"name": "ISZERO"
										},
										{
											"begin": 5761,
											"end": 5884,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5761,
											"end": 5884,
											"name": "JUMPI"
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "DUP5"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "DUP3"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SUB"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "MSTORE"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "KECCAK256"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "ADD"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP3"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "EXP"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "DUP2"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SLOAD"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "DUP2"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "MUL"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "NOT"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "AND"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "DUP4"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "AND"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "MUL"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "OR"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "SSTORE"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5826,
											"name": "POP"
										},
										{
											"begin": 5868,
											"end": 5872,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5841,
											"end": 5857,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP7"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "AND"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "AND"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "DUP2"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "MSTORE"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "ADD"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "SWAP1"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "DUP2"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "MSTORE"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "ADD"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "KECCAK256"
										},
										{
											"begin": 5841,
											"end": 5865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "EXP"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "DUP2"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "SLOAD"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "DUP2"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "MUL"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "NOT"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "AND"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "SWAP1"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "DUP4"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "ISZERO"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "ISZERO"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "MUL"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "OR"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "SWAP1"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "SSTORE"
										},
										{
											"begin": 5841,
											"end": 5872,
											"name": "POP"
										},
										{
											"begin": 5761,
											"end": 5884,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5761,
											"end": 5884,
											"name": "JUMPDEST"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP6"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "AND"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "AND"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "DUP2"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "MSTORE"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "ADD"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "DUP2"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "MSTORE"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "ADD"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5922,
											"name": "KECCAK256"
										},
										{
											"begin": 5928,
											"end": 5938,
											"name": "DUP4"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "DUP3"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SUB"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "MSTORE"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "KECCAK256"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "ADD"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP2"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP3"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP2"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP2"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "EXP"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SLOAD"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "DUP2"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "MUL"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "NOT"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "DUP4"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "AND"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "MUL"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "OR"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SWAP1"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "SSTORE"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "POP"
										},
										{
											"begin": 5896,
											"end": 5939,
											"name": "POP"
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "DUP4"
										},
										{
											"begin": 5950,
											"end": 5968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5979,
											"name": "DUP6"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "MSTORE"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "ADD"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "MSTORE"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "ADD"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "KECCAK256"
										},
										{
											"begin": 5950,
											"end": 5980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "EXP"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "SLOAD"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "DUP2"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "MUL"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "NOT"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "DUP4"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "AND"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "MUL"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "OR"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "SWAP1"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "SSTORE"
										},
										{
											"begin": 5950,
											"end": 5989,
											"name": "POP"
										},
										{
											"begin": 6075,
											"end": 6081,
											"name": "DUP4"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "AND"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "229AEC2EC4B21E700D6DAF13A894E7B38C18B844B021F2EEE263F04AF3EA6F00"
										},
										{
											"begin": 6083,
											"end": 6093,
											"name": "DUP5"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "MLOAD"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "DUP1"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "DUP3"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "AND"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "AND"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "DUP2"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "MSTORE"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "ADD"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "SWAP2"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "POP"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "POP"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "MLOAD"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "DUP1"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "SWAP2"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "SUB"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "SWAP1"
										},
										{
											"begin": 6057,
											"end": 6094,
											"name": "LOG2"
										},
										{
											"begin": 2214,
											"end": 2215,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1015,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "POP"
										},
										{
											"begin": 5469,
											"end": 6102,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SLOAD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "EXP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DIV"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "EXP"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DIV"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 993,
											"name": "CALLER"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "EQ"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPI"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "REVERT"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SLOAD"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "EXP"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DIV"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP2"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "EQ"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPI"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "DUP1"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "REVERT"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP1"
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "EXP"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SLOAD"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "MUL"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "NOT"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP4"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "MUL"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "OR"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SSTORE"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SLOAD"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP4"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SSTORE"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "GT"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "ISZERO"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP4"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "MSTORE"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "KECCAK256"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP3"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "ADD"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "ADD"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP3"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "GT"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "ISZERO"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPI"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "DUP2"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SSTORE"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "ADD"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "POP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMP"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMPDEST"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "SWAP1"
										},
										{
											"begin": 2973,
											"end": 7285,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"converterAddress(address,uint32)": "90ab3106",
							"converterCount(address)": "cd9d4d66",
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b",
							"registerConverter(address,address)": "d26a8d2e",
							"tokenAddress(address)": "9884e801",
							"tokenCount()": "9f181b5e",
							"tokens(uint256)": "4f64b2be",
							"transferOwnership(address)": "f2fde38b",
							"unregisterConverter(address,uint32)": "38cb066f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"unregisterConverter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_index\",\"type\":\"uint32\"}],\"name\":\"converterAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"tokenAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"converterCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"registerConverter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ConverterAddition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"ConverterRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"converterAddress(address,uint32)\":{\"details\":\"returns the converter address associated with the given token\\r or zero address if no such converter exists\\r\",\"params\":{\"_index\":\"converter index\\r\",\"_token\":\"token address\\r\"},\"return\":\"converter address\\r\"},\"converterCount(address)\":{\"details\":\"returns the number of converters associated with the given token\\r or 0 if the token isn't registered\\r\",\"params\":{\"_token\":\"token address\\r\"},\"return\":\"number of converters\\r\"},\"registerConverter(address,address)\":{\"details\":\"adds a new converter address for a given token to the registry\\r throws if the converter is already registered\\r\",\"params\":{\"_converter\":\"converter address\\r\",\"_token\":\"token address\\r\"}},\"tokenAddress(address)\":{\"details\":\"returns the token address associated with the given converter\\r or zero address if no such converter exists\\r\",\"params\":{\"_converter\":\"converter address\\r\"},\"return\":\"token address\\r\"},\"tokenCount()\":{\"details\":\"returns the number of tokens in the registry\\r\",\"return\":\"number of tokens\\r\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}},\"unregisterConverter(address,uint32)\":{\"details\":\"removes an existing converter from the registry\\r note that the function doesn't scale and might be needed to be called\\r multiple times when removing an older converter from a large converter list\\r\",\"params\":{\"_index\":\"converter index\\r\",\"_token\":\"token address\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"abis/ConverterRegistry.sol\":\"ConverterRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"abis/ConverterRegistry.sol\":{\"keccak256\":\"0xc4710b02d9f1e0ad4d58b6b8b372bace9f3ef46fa92bffa340c164d5b4430e3b\",\"urls\":[\"bzzr://e27517f1e03522dd3674a8d0fab15ffb4b761928f185f1f576f7b4c6aa76d5dc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"IOwned": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"Owned": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "_prevOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "OwnerUpdate",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"acceptOwnership()": {
								"details": "used by a new owner to accept an ownership transfer\r"
							},
							"transferOwnership(address)": {
								"details": "allows transferring the contract ownership\r the new owner still needs to accept the transfer\r can only be called by the contract owner\r",
								"params": {
									"_newOwner": "new contract owner\r"
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"abis/ConverterRegistry.sol\":621:1684  contract Owned is IOwned {\r... */\n  mstore(0x40, 0x80)\n    /* \"abis/ConverterRegistry.sol\":836:894  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"abis/ConverterRegistry.sol\":836:894  constructor() public {\r... */\n  pop\n    /* \"abis/ConverterRegistry.sol\":876:886  msg.sender */\n  caller\n    /* \"abis/ConverterRegistry.sol\":868:873  owner */\n  0x0\n  dup1\n    /* \"abis/ConverterRegistry.sol\":868:886  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"abis/ConverterRegistry.sol\":621:1684  contract Owned is IOwned {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"abis/ConverterRegistry.sol\":621:1684  contract Owned is IOwned {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x79ba5097\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd4ee1d90\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n      pop\n      tag_7\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"abis/ConverterRegistry.sol\":653:673  address public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"abis/ConverterRegistry.sol\":653:673  address public owner */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":680:703  address public newOwner */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"abis/ConverterRegistry.sol\":680:703  address public newOwner */\n      pop\n      tag_13\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n      pop\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n    tag_8:\n        /* \"abis/ConverterRegistry.sol\":1561:1569  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1547:1569  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1547:1557  msg.sender */\n      caller\n        /* \"abis/ConverterRegistry.sol\":1547:1569  msg.sender == newOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":1539:1570  require(msg.sender == newOwner) */\n      iszero\n      iszero\n      tag_19\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_19:\n        /* \"abis/ConverterRegistry.sol\":1605:1613  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1586:1614  OwnerUpdate(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1598:1603  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1586:1614  OwnerUpdate(owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"abis/ConverterRegistry.sol\":1633:1641  newOwner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1625:1630  owner */\n      0x0\n      dup1\n        /* \"abis/ConverterRegistry.sol\":1625:1641  owner = newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":1671:1672  0 */\n      0x0\n        /* \"abis/ConverterRegistry.sol\":1652:1660  newOwner */\n      0x1\n      0x0\n        /* \"abis/ConverterRegistry.sol\":1652:1673  newOwner = address(0) */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":1494:1681  function acceptOwnership() public {\r... */\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":653:673  address public owner */\n    tag_11:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":680:703  address public newOwner */\n    tag_14:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n    tag_17:\n        /* \"abis/ConverterRegistry.sol\":997:1002  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":983:993  msg.sender */\n      caller\n        /* \"abis/ConverterRegistry.sol\":983:1002  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"abis/ConverterRegistry.sol\":975:1003  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_21\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_21:\n        /* \"abis/ConverterRegistry.sol\":1358:1363  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1345:1363  _newOwner != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"abis/ConverterRegistry.sol\":1345:1354  _newOwner */\n      dup2\n        /* \"abis/ConverterRegistry.sol\":1345:1363  _newOwner != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"abis/ConverterRegistry.sol\":1337:1364  require(_newOwner != owner) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"abis/ConverterRegistry.sol\":1386:1395  _newOwner */\n      dup1\n        /* \"abis/ConverterRegistry.sol\":1375:1383  newOwner */\n      0x1\n      0x0\n        /* \"abis/ConverterRegistry.sol\":1375:1395  newOwner = _newOwner */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"abis/ConverterRegistry.sol\":1263:1403  function transferOwnership(address _newOwner) public ownerOnly {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820747fb9ada1848f78bf1c81f5ca3e80116b53eaf3ee1ab38fa80e134984a63fcc0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610480806100606000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806379ba5097146100675780638da5cb5b1461007e578063d4ee1d90146100d5578063f2fde38b1461012c575b600080fd5b34801561007357600080fd5b5061007c61016f565b005b34801561008a57600080fd5b5061009361030e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea610333565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013857600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610359565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101cb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103b457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561041057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820747fb9ada1848f78bf1c81f5ca3e80116b53eaf3ee1ab38fa80e134984a63fcc0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x480 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH21 0x7FB9ADA1848F78BF1C81F5CA3E80116B53EAF3EE1A 0xb3 DUP16 0xa8 0xe SGT 0x49 DUP5 0xa6 0x3f 0xcc STOP 0x29 ",
							"sourceMap": "621:1063:0:-;;;836:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;836:58:0;876:10;868:5;;:18;;;;;;;;;;;;;;;;;;621:1063;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806379ba5097146100675780638da5cb5b1461007e578063d4ee1d90146100d5578063f2fde38b1461012c575b600080fd5b34801561007357600080fd5b5061007c61016f565b005b34801561008a57600080fd5b5061009361030e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100e157600080fd5b506100ea610333565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561013857600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610359565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101cb57600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f343765429aea5a34b3ff6a3785a98a5abb2597aca87bfbb58632c173d585373a60405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103b457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561041057600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820747fb9ada1848f78bf1c81f5ca3e80116b53eaf3ee1ab38fa80e134984a63fcc0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7E JUMPI DUP1 PUSH4 0xD4EE1D90 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C PUSH2 0x16F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x359 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH21 0x7FB9ADA1848F78BF1C81F5CA3E80116B53EAF3EE1A 0xb3 DUP16 0xa8 0xe SGT 0x49 DUP5 0xa6 0x3f 0xcc STOP 0x29 ",
							"sourceMap": "621:1063:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:187;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:187:0;;;;;;653:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;653:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;680:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;680:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1263:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:187;1561:8;;;;;;;;;;;1547:22;;:10;:22;;;1539:31;;;;;;;;1605:8;;;;;;;;;;;1586:28;;1598:5;;;;;;;;;;;1586:28;;;;;;;;;;;;1633:8;;;;;;;;;;;1625:5;;:16;;;;;;;;;;;;;;;;;;1671:1;1652:8;;:21;;;;;;;;;;;;;;;;;;1494:187::o;653:20::-;;;;;;;;;;;;;:::o;680:23::-;;;;;;;;;;;;;:::o;1263:140::-;997:5;;;;;;;;;;;983:19;;:10;:19;;;975:28;;;;;;;;1358:5;;;;;;;;;;;1345:18;;:9;:18;;;;1337:27;;;;;;;;1386:9;1375:8;;:20;;;;;;;;;;;;;;;;;;1263:140;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "230400",
								"executionCost": "20535",
								"totalCost": "250935"
							},
							"external": {
								"acceptOwnership()": "43196",
								"newOwner()": "486",
								"owner()": "464",
								"transferOwnership(address)": "21086"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 1684,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "MSTORE"
								},
								{
									"begin": 836,
									"end": 894,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 836,
									"end": 894,
									"name": "POP"
								},
								{
									"begin": 876,
									"end": 886,
									"name": "CALLER"
								},
								{
									"begin": 868,
									"end": 873,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 868,
									"end": 873,
									"name": "DUP1"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "EXP"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SLOAD"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "MUL"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "NOT"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "AND"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SWAP1"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "DUP4"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "AND"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "MUL"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "OR"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SWAP1"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "SSTORE"
								},
								{
									"begin": 868,
									"end": 886,
									"name": "POP"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "DUP1"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "CODECOPY"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 621,
									"end": 1684,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820747fb9ada1848f78bf1c81f5ca3e80116b53eaf3ee1ab38fa80e134984a63fcc0029",
									".code": [
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "MSTORE"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "LT"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "DIV"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "AND"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "79BA5097"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "EQ"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "EQ"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "D4EE1D90"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "EQ"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "EQ"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "JUMPI"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "JUMPDEST"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 1684,
											"name": "REVERT"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "STOP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP3"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "MSTORE"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "ADD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "POP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "MLOAD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SUB"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "RETURN"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP3"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MSTORE"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "ADD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SUB"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "RETURN"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SUB"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP2"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "ADD"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "ADD"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP3"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP2"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "STOP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SLOAD"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "EXP"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "SWAP1"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "DIV"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "CALLER"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "AND"
										},
										{
											"begin": 1547,
											"end": 1569,
											"name": "EQ"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "ISZERO"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPI"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "DUP1"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "REVERT"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1539,
											"end": 1570,
											"name": "JUMPDEST"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SLOAD"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "EXP"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "SWAP1"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "DIV"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1605,
											"end": 1613,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "AND"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SLOAD"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "EXP"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "SWAP1"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "DIV"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "AND"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "343765429AEA5A34B3FF6A3785A98A5ABB2597ACA87BFBB58632C173D585373A"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "MLOAD"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "DUP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "SWAP2"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "SUB"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "SWAP1"
										},
										{
											"begin": 1586,
											"end": 1614,
											"name": "LOG3"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "EXP"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "DIV"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1641,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "DUP1"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "EXP"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "DUP2"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SLOAD"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "DUP2"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "MUL"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "NOT"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "DUP4"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "AND"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "MUL"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "OR"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SWAP1"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SSTORE"
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "POP"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "EXP"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SLOAD"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP2"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MUL"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "NOT"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "DUP4"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "AND"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "MUL"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "OR"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SWAP1"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "SSTORE"
										},
										{
											"begin": 1652,
											"end": 1673,
											"name": "POP"
										},
										{
											"begin": 1494,
											"end": 1681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMPDEST"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SLOAD"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "EXP"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DIV"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "DUP2"
										},
										{
											"begin": 653,
											"end": 673,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SLOAD"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "EXP"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DIV"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DUP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SLOAD"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "EXP"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "DIV"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 997,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 993,
											"name": "CALLER"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "AND"
										},
										{
											"begin": 983,
											"end": 1002,
											"name": "EQ"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "ISZERO"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPI"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "REVERT"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 975,
											"end": 1003,
											"name": "JUMPDEST"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SLOAD"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "EXP"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "DIV"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP2"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "EQ"
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "ISZERO"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPI"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "DUP1"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "REVERT"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1337,
											"end": 1364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP1"
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1375,
											"end": 1383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "EXP"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SLOAD"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP2"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "MUL"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "NOT"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "DUP4"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "MUL"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "OR"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "SSTORE"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1403,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_prevOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdate\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"acceptOwnership()\":{\"details\":\"used by a new owner to accept an ownership transfer\\r\"},\"transferOwnership(address)\":{\"details\":\"allows transferring the contract ownership\\r the new owner still needs to accept the transfer\\r can only be called by the contract owner\\r\",\"params\":{\"_newOwner\":\"new contract owner\\r\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"abis/ConverterRegistry.sol\":\"Owned\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"abis/ConverterRegistry.sol\":{\"keccak256\":\"0xc4710b02d9f1e0ad4d58b6b8b372bace9f3ef46fa92bffa340c164d5b4430e3b\",\"urls\":[\"bzzr://e27517f1e03522dd3674a8d0fab15ffb4b761928f185f1f576f7b4c6aa76d5dc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"Utils": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"abis/ConverterRegistry.sol\":1798:2410  contract Utils {\r... */\n  mstore(0x40, 0x80)\n    /* \"abis/ConverterRegistry.sol\":1858:1887  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"abis/ConverterRegistry.sol\":1858:1887  constructor() public {\r... */\n  pop\n    /* \"abis/ConverterRegistry.sol\":1798:2410  contract Utils {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"abis/ConverterRegistry.sol\":1798:2410  contract Utils {\r... */\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820a4f8c54b512494cb5df320d392392989022fd198bcdff0f1f8e537c89750b45d0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603580601d6000396000f3006080604052600080fd00a165627a7a72305820a4f8c54b512494cb5df320d392392989022fd198bcdff0f1f8e537c89750b45d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LOG4 0xf8 0xc5 0x4b MLOAD 0x24 SWAP5 0xcb 0x5d RETURN KECCAK256 0xd3 SWAP3 CODECOPY 0x29 DUP10 MUL 0x2f 0xd1 SWAP9 0xbc 0xdf CREATE CALL 0xf8 0xe5 CALLDATACOPY 0xc8 SWAP8 POP 0xb4 0x5d STOP 0x29 ",
							"sourceMap": "1798:612:0:-;;;1858:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;1858:29:0;1798:612;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fd00a165627a7a72305820a4f8c54b512494cb5df320d392392989022fd198bcdff0f1f8e537c89750b45d0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LOG4 0xf8 0xc5 0x4b MLOAD 0x24 SWAP5 0xcb 0x5d RETURN KECCAK256 0xd3 SWAP3 CODECOPY 0x29 DUP10 MUL 0x2f 0xd1 SWAP9 0xbc 0xdf CREATE CALL 0xf8 0xe5 CALLDATACOPY 0xc8 SWAP8 POP 0xb4 0x5d STOP 0x29 ",
							"sourceMap": "1798:612:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "10600",
								"executionCost": "66",
								"totalCost": "10666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1798,
									"end": 2410,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "MSTORE"
								},
								{
									"begin": 1858,
									"end": 1887,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1858,
									"end": 1887,
									"name": "POP"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "DUP1"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "CODECOPY"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1798,
									"end": 2410,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820a4f8c54b512494cb5df320d392392989022fd198bcdff0f1f8e537c89750b45d0029",
									".code": [
										{
											"begin": 1798,
											"end": 2410,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1798,
											"end": 2410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 2410,
											"name": "MSTORE"
										},
										{
											"begin": 1798,
											"end": 2410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 2410,
											"name": "DUP1"
										},
										{
											"begin": 1798,
											"end": 2410,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"abis/ConverterRegistry.sol\":\"Utils\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"abis/ConverterRegistry.sol\":{\"keccak256\":\"0xc4710b02d9f1e0ad4d58b6b8b372bace9f3ef46fa92bffa340c164d5b4430e3b\",\"urls\":[\"bzzr://e27517f1e03522dd3674a8d0fab15ffb4b761928f185f1f576f7b4c6aa76d5dc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "abis/ConverterRegistry.sol:14:5: Warning: Function state mutability can be restricted to pure\n    function owner() public view returns (address) {}\r\n    ^-----------------------------------------------^\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 376,
					"file": "abis/ConverterRegistry.sol",
					"start": 327
				},
				"type": "Warning"
			}
		],
		"sources": {
			"abis/ConverterRegistry.sol": {
				"ast": {
					"absolutePath": "abis/ConverterRegistry.sol",
					"exportedSymbols": {
						"ConverterRegistry": [
							378
						],
						"IOwned": [
							16
						],
						"Owned": [
							94
						],
						"Utils": [
							140
						]
					},
					"id": 379,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 16,
							"linearizedBaseContracts": [
								16
							],
							"name": "IOwned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 6,
										"nodeType": "Block",
										"src": "374:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 7,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "341:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "365:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "364:9:0"
									},
									"scope": 16,
									"src": "327:49:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 12,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "411:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:0:0"
									},
									"scope": 16,
									"src": "384:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 15,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "476:0:0"
									},
									"scope": 16,
									"src": "443:34:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 379,
							"src": "189:291:0"
						},
						{
							"id": 17,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "524:24:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 18,
										"name": "IOwned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "639:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOwned_$16",
											"typeString": "contract IOwned"
										}
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "639:6:0"
								}
							],
							"contractDependencies": [
								16
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 94,
							"linearizedBaseContracts": [
								94,
								16
							],
							"name": "Owned",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 21,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 94,
									"src": "653:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 20,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "653:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "newOwner",
									"nodeType": "VariableDeclaration",
									"scope": 94,
									"src": "680:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 29,
									"name": "OwnerUpdate",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"name": "_prevOwner",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "730:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "758:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "729:55:0"
									},
									"src": "712:73:0"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "857:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 32,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															21
														],
														"referencedDeclaration": 21,
														"src": "868:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "876:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "876:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "868:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "868:18:0"
											}
										]
									},
									"documentation": "@dev constructor\r",
									"id": 38,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "847:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 94,
									"src": "836:58:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "964:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 41,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "983:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "983:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 43,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	21
																],
																"referencedDeclaration": 21,
																"src": "997:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "983:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "975:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "975:28:0"
											},
											{
												"id": 47,
												"nodeType": "PlaceholderStatement",
												"src": "1014:1:0"
											}
										]
									},
									"documentation": null,
									"id": 49,
									"name": "ownerOnly",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:0:0"
									},
									"src": "945:78:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1326:77:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "1345:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 58,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	21
																],
																"referencedDeclaration": 21,
																"src": "1358:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1345:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "1337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1337:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "1337:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1375:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1386:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1375:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "1375:20:0"
											}
										]
									},
									"documentation": "@dev allows transferring the contract ownership\r\nthe new owner still needs to accept the transfer\r\ncan only be called by the contract owner\r\n@param _newOwner    new contract owner\r",
									"id": 67,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 54,
											"modifierName": {
												"argumentTypes": null,
												"id": 53,
												"name": "ownerOnly",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "1316:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1316:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1290:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:0:0"
									},
									"scope": 94,
									"src": "1263:140:0",
									"stateMutability": "nonpayable",
									"superFunction": 12,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1528:153:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1547:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1547:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1561:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1547:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "1539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1539:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1539:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 78,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																21
															],
															"referencedDeclaration": 21,
															"src": "1598:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1605:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 77,
														"name": "OwnerUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1586:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "EmitStatement",
												"src": "1581:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 82,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															21
														],
														"referencedDeclaration": 21,
														"src": "1625:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1633:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1625:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1625:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 86,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1652:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1671:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1663:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1663:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1652:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1652:21:0"
											}
										]
									},
									"documentation": "@dev used by a new owner to accept an ownership transfer\r",
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "acceptOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1528:0:0"
									},
									"scope": 94,
									"src": "1494:187:0",
									"stateMutability": "nonpayable",
									"superFunction": 15,
									"visibility": "public"
								}
							],
							"scope": 379,
							"src": "621:1063:0"
						},
						{
							"id": 95,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "1728:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "Utils",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1879:8:0",
										"statements": []
									},
									"documentation": "constructor\r",
									"id": 99,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1879:0:0"
									},
									"scope": 140,
									"src": "1858:29:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1990:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 104,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "2009:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2019:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2009:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "2001:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2001:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "2001:20:0"
											},
											{
												"id": 109,
												"nodeType": "PlaceholderStatement",
												"src": "2032:1:0"
											}
										]
									},
									"documentation": null,
									"id": 111,
									"name": "greaterThanZero",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1973:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1972:17:0"
									},
									"src": "1948:93:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2161:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 116,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "2180:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2200:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2192:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2192:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2180:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "2172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2172:31:0"
											},
											{
												"id": 123,
												"nodeType": "PlaceholderStatement",
												"src": "2214:1:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"name": "validAddress",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2143:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2142:18:0"
									},
									"src": "2121:102:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2340:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2359:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 132,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "2379:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Utils_$140",
																			"typeString": "contract Utils"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Utils_$140",
																			"typeString": "contract Utils"
																		}
																	],
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2371:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2359:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "2351:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2351:34:0"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2396:1:0"
											}
										]
									},
									"documentation": null,
									"id": 139,
									"name": "notThis",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2322:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2321:18:0"
									},
									"src": "2305:100:0",
									"visibility": "internal"
								}
							],
							"scope": 379,
							"src": "1798:612:0"
						},
						{
							"id": 141,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "2464:24:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 142,
										"name": "Owned",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 94,
										"src": "3003:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owned_$94",
											"typeString": "contract Owned"
										}
									},
									"id": 143,
									"nodeType": "InheritanceSpecifier",
									"src": "3003:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 144,
										"name": "Utils",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 140,
										"src": "3010:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Utils_$140",
											"typeString": "contract Utils"
										}
									},
									"id": 145,
									"nodeType": "InheritanceSpecifier",
									"src": "3010:5:0"
								}
							],
							"contractDependencies": [
								16,
								94,
								140
							],
							"contractKind": "contract",
							"documentation": "Bancor Converter Registry\r\nThe bancor converter registry keeps converter addresses by token addresses and vice versa.\r\nThe owner can update converter addresses so that a the token address always points to\r\nthe updated list of converters for each token.\r\nThe contract also allows to iterate through all the tokens in the network.\r\nNote that converter addresses for each token are returned in ascending order (from oldest\r\nto latest).\r",
							"fullyImplemented": true,
							"id": 378,
							"linearizedBaseContracts": [
								378,
								140,
								94,
								16
							],
							"name": "ConverterRegistry",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 149,
									"name": "tokensRegistered",
									"nodeType": "VariableDeclaration",
									"scope": 378,
									"src": "3023:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 148,
										"keyType": {
											"id": 146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3032:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3023:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 147,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3043:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 154,
									"name": "tokensToConverters",
									"nodeType": "VariableDeclaration",
									"scope": 378,
									"src": "3126:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(address => address[])"
									},
									"typeName": {
										"id": 153,
										"keyType": {
											"id": 150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3135:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3126:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(address => address[])"
										},
										"valueType": {
											"baseType": {
												"id": 151,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3146:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 152,
											"length": null,
											"nodeType": "ArrayTypeName",
											"src": "3146:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"name": "convertersToTokens",
									"nodeType": "VariableDeclaration",
									"scope": 378,
									"src": "3231:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 157,
										"keyType": {
											"id": 155,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3240:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3231:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3251:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 161,
									"name": "tokens",
									"nodeType": "VariableDeclaration",
									"scope": 378,
									"src": "3334:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 159,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3334:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 160,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "3334:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 167,
									"name": "ConverterAddition",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"indexed": true,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3516:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3540:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3515:42:0"
									},
									"src": "3492:66:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 173,
									"name": "ConverterRemoval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3653:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "3677:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3652:42:0"
									},
									"src": "3630:65:0"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "3767:8:0",
										"statements": []
									},
									"documentation": "@dev constructor\r",
									"id": 177,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3757:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:0"
									},
									"scope": 378,
									"src": "3746:29:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "3947:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 182,
														"name": "tokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "3965:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3965:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 181,
												"id": 184,
												"nodeType": "Return",
												"src": "3958:20:0"
											}
										]
									},
									"documentation": "@dev returns the number of tokens in the registry\r\n@return number of tokens\r",
									"id": 186,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "tokenCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3914:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "3938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3937:9:0"
									},
									"scope": 378,
									"src": "3895:91:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "4285:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 193,
															"name": "tokensToConverters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4303:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																"typeString": "mapping(address => address[] storage ref)"
															}
														},
														"id": 195,
														"indexExpression": {
															"argumentTypes": null,
															"id": 194,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "4322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4303:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4303:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 192,
												"id": 197,
												"nodeType": "Return",
												"src": "4296:40:0"
											}
										]
									},
									"documentation": "@dev returns the number of converters associated with the given token\r\nor 0 if the token isn't registered\r\n@param _token   token address\r\n@return number of converters\r",
									"id": 199,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "converterCount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4239:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4238:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "4276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4275:9:0"
									},
									"scope": 378,
									"src": "4215:129:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "4704:152:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 208,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4719:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 209,
																"name": "tokensToConverters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "4729:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 211,
															"indexExpression": {
																"argumentTypes": null,
																"id": 210,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "4748:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4729:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4729:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4719:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 218,
												"nodeType": "IfStatement",
												"src": "4715:79:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4792:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4784:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"functionReturnParameters": 207,
													"id": 217,
													"nodeType": "Return",
													"src": "4777:17:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 219,
															"name": "tokensToConverters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4814:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																"typeString": "mapping(address => address[] storage ref)"
															}
														},
														"id": 221,
														"indexExpression": {
															"argumentTypes": null,
															"id": 220,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "4833:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4814:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 223,
													"indexExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "4841:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4814:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 207,
												"id": 224,
												"nodeType": "Return",
												"src": "4807:41:0"
											}
										]
									},
									"documentation": "@dev returns the converter address associated with the given token\r\nor zero address if no such converter exists\r\n@param _token   token address\r\n@param _index   converter index\r\n@return converter address\r",
									"id": 226,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "converterAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4643:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4643:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4659:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 202,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4659:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4642:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4694:9:0"
									},
									"scope": 378,
									"src": "4617:239:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "5164:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 233,
														"name": "convertersToTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5182:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 235,
													"indexExpression": {
														"argumentTypes": null,
														"id": 234,
														"name": "_converter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "5201:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5182:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 232,
												"id": 236,
												"nodeType": "Return",
												"src": "5175:37:0"
											}
										]
									},
									"documentation": "@dev returns the token address associated with the given converter\r\nor zero address if no such converter exists\r\n@param _converter   converter address\r\n@return token address\r",
									"id": 238,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "tokenAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "_converter",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "5114:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5113:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "5155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5154:9:0"
									},
									"scope": 378,
									"src": "5092:128:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "5636:466:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 254,
																	"name": "convertersToTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 158,
																	"src": "5655:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 256,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 255,
																	"name": "_converter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5674:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5655:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5697:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5689:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5689:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5655:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "5647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5647:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "5647:53:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5765:25:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 263,
															"name": "tokensRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5766:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 265,
														"indexExpression": {
															"argumentTypes": null,
															"id": 264,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "5783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5766:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 280,
												"nodeType": "IfStatement",
												"src": "5761:123:0",
												"trueBody": {
													"id": 279,
													"nodeType": "Block",
													"src": "5792:92:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 270,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5819:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 267,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "5807:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5807:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) returns (uint256)"
																	}
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5807:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "5807:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 273,
																		"name": "tokensRegistered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 149,
																		"src": "5841:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 274,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5858:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5841:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5868:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5841:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "5841:31:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 285,
															"name": "_converter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "5928:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 281,
																"name": "tokensToConverters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "5896:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 283,
															"indexExpression": {
																"argumentTypes": null,
																"id": 282,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5915:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5896:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5896:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5896:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "5896:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 288,
															"name": "convertersToTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "5950:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 290,
														"indexExpression": {
															"argumentTypes": null,
															"id": 289,
															"name": "_converter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "5969:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5950:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 291,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "5983:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5950:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "5950:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 295,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "6075:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 296,
															"name": "_converter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "6083:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 294,
														"name": "ConverterAddition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "6057:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6057:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "EmitStatement",
												"src": "6052:42:0"
											}
										]
									},
									"documentation": "@dev adds a new converter address for a given token to the registry\r\nthrows if the converter is already registered\r\n@param _token       token address\r\n@param _converter   converter address\r",
									"id": 300,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 245,
											"modifierName": {
												"argumentTypes": null,
												"id": 244,
												"name": "ownerOnly",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "5557:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5557:9:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 247,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 240,
													"src": "5589:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 248,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "validAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 125,
												"src": "5576:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5576:20:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 250,
													"name": "_converter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 242,
													"src": "5619:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 251,
											"modifierName": {
												"argumentTypes": null,
												"id": 249,
												"name": "validAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 125,
												"src": "5606:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5606:24:0"
										}
									],
									"name": "registerConverter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"name": "_converter",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "5512:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5495:36:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5636:0:0"
									},
									"scope": 378,
									"src": "5469:633:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "6565:717:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 313,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "6584:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 314,
																		"name": "tokensToConverters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 154,
																		"src": "6593:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																			"typeString": "mapping(address => address[] storage ref)"
																		}
																	},
																	"id": 316,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 315,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "6612:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6593:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6593:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6584:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															396,
															397
														],
														"referencedDeclaration": 396,
														"src": "6576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6576:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "6576:51:0"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"name": "converter",
														"nodeType": "VariableDeclaration",
														"scope": 377,
														"src": "6640:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 321,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 323,
															"name": "tokensToConverters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "6660:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																"typeString": "mapping(address => address[] storage ref)"
															}
														},
														"id": 325,
														"indexExpression": {
															"argumentTypes": null,
															"id": 324,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "6679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6660:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 327,
													"indexExpression": {
														"argumentTypes": null,
														"id": 326,
														"name": "_index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "6687:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6660:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6640:54:0"
											},
											{
												"body": {
													"id": 358,
													"nodeType": "Block",
													"src": "6834:92:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 344,
																			"name": "tokensToConverters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "6849:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 349,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 345,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "6868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6849:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 350,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 346,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 330,
																			"src": "6876:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6880:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6876:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6849:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 351,
																			"name": "tokensToConverters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "6885:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																				"typeString": "mapping(address => address[] storage ref)"
																			}
																		},
																		"id": 353,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 352,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 302,
																			"src": "6904:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6885:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 355,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 354,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "6912:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6885:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6849:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 357,
															"nodeType": "ExpressionStatement",
															"src": "6849:65:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 335,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "6790:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 336,
																"name": "tokensToConverters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "6794:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 338,
															"indexExpression": {
																"argumentTypes": null,
																"id": 337,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "6813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6794:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 339,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6794:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6790:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"initializationExpression": {
													"assignments": [
														330
													],
													"declarations": [
														{
															"constant": false,
															"id": 330,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 377,
															"src": "6767:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"typeName": {
																"id": 329,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "6767:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 334,
													"initialValue": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 331,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "6778:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6787:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6778:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6767:21:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6829:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 341,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "6829:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 343,
													"nodeType": "ExpressionStatement",
													"src": "6829:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6762:164:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "7011:35:0",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 360,
																"name": "tokensToConverters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "7011:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
																	"typeString": "mapping(address => address[] storage ref)"
																}
															},
															"id": 362,
															"indexExpression": {
																"argumentTypes": null,
																"id": 361,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "7030:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7011:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7011:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "7011:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7136:36:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 366,
															"name": "convertersToTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "7143:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 368,
														"indexExpression": {
															"argumentTypes": null,
															"id": 367,
															"name": "converter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7162:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7143:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "7136:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 372,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "7256:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 373,
															"name": "converter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7264:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 371,
														"name": "ConverterRemoval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "7239:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7239:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "EmitStatement",
												"src": "7234:40:0"
											}
										]
									},
									"documentation": "@dev removes an existing converter from the registry\r\nnote that the function doesn't scale and might be needed to be called\r\nmultiple times when removing an older converter from a large converter list\r\n@param _token   token address\r\n@param _index   converter index\r",
									"id": 377,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 307,
											"modifierName": {
												"argumentTypes": null,
												"id": 306,
												"name": "ownerOnly",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 49,
												"src": "6520:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6520:9:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 309,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "6552:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 310,
											"modifierName": {
												"argumentTypes": null,
												"id": 308,
												"name": "validAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 125,
												"src": "6539:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "6539:20:0"
										}
									],
									"name": "unregisterConverter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6464:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "6480:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 303,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6463:31:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6565:0:0"
									},
									"scope": 378,
									"src": "6435:847:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 379,
							"src": "2973:4312:0"
						}
					],
					"src": "123:7162:0"
				},
				"id": 0
			}
		}
	}
}